-- 서브쿼리 종류
-- 1. 스칼라 서브쿼리: SELECT절, 이에 의해 나오는 결과는 '하나의 행'이어야 함
--      scalar: 한 번에 한 가지만 처리하는 
-- 2. 인라인 뷰: FROM절, 하나의 임시 테이블
-- 3. 중첩 서브쿼리(서브쿼리): WHERE절

-- 추가로, 서브쿼리를 사용하는 것보다 JOIN을 사용하는 것이 일반적으로 성능이 좋다.


-- SQL DEVELOPER 상빈님 예시

SELECT
    WAREHOUSE_ID,
    C_TOTAL_COST,
    C_TOTAL_PRICE,
    S_TOTAL_COST,
    S_TOTAL_PRICE,
    RANK() OVER(ORDER BY C_TOTAL_COST DESC) C_COST_RANKING,
    RANK() OVER(ORDER BY C_TOTAL_PRICE DESC) C_PRICE_RANKING,
    RANK() OVER(ORDER BY S_TOTAL_COST DESC) S_COST_RANKING,
    RANK() OVER(ORDER BY S_TOTAL_PRICE DESC) C_PRICE_RANKING
FROM (
SELECT
    I.WAREHOUSE_ID,
    SUM(C.STANDARD_COST) AS C_TOTAL_COST,
    SUM(C.LIST_PRICE) AS C_TOTAL_PRICE,
    SUM(S.STANDARD_COST) AS S_TOTAL_COST,
    SUM(S.LIST_PRICE) AS S_TOTAL_PRICE
FROM INVENTORIES I,
(
    SELECT PRODUCT_ID, STANDARD_COST, LIST_PRICE
    FROM PRODUCTS
    WHERE DESCRIPTION LIKE 'C%'
) C,
( 
    SELECT PRODUCT_ID, STANDARD_COST, LIST_PRICE
    FROM PRODUCTS
    WHERE DESCRIPTION LIKE 'S%'
) S
WHERE 
    I.PRODUCT_ID = C.PRODUCT_ID
OR 
    I.PRODUCT_ID = S.PRODUCT_ID
GROUP BY
    I.WAREHOUSE_ID
)
ORDER BY 
    WAREHOUSE_ID
